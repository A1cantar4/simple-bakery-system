# Revisado em: 28/07/2025

# Estoque de p√£es (quantidade dispon√≠vel de cada tipo)
stock = {
    'bolach√£o': 20,
    'frances': 30,
    'baiano': 25,
    'doce': 15
}

# Pre√ßos dos p√£es
bread_price = {
    'bolach√£o': 0.5,
    'frances': 0.33,
    'baiano': 0.5,
    'doce': 0.5
}

# Lista de devedores (para compras fiadas)
debtors = []

# Exibir card√°pio
print("¬®¬®¬® CARD√ÅPIO DE P√ÉES ¬®¬®¬®")
for idx, name in enumerate(stock.keys(), 1):
    print(f"{idx}- {name.capitalize()} (R${bread_price[name]:.2f})")

# Escolha do tipo de p√£o
option = input("\nQual p√£o voc√™ deseja (digite o nome ou n√∫mero)? ").strip().lower()

# Convertendo n√∫mero para nome se necess√°rio
bread_list = list(stock.keys())
if option.isdigit() and 1 <= int(option) <= len(bread_list):
    tipo_pao = bread_list[int(option) - 1]
elif option in bread_list:
    tipo_pao = option
else:
    print("P√£o inv√°lido.")
    exit()

# Verificar quantidade desejada
quantidade = int(input(f"\nQuantos p√£es de {tipo_pao} voc√™ quer meu nobre? "))
if quantidade > stock[tipo_pao]:
    print(f"Desculpe, s√≥ temos {stock[tipo_pao]} {tipo_pao}(s) no estoque.")
    exit()

# Pre√ßo do p√£o escolhido
pao = bread_price[tipo_pao]

# Sele√ß√£o de m√©todo de pagamento
print("\nM√©todos de pagamento:")
print("1- Pix")
print("2- D√©bito")
print("3- Cr√©dito")
print("4- Dinheiro (√† vista)")
print("5- Fiado")

pagamento_opcao = input("\nQual vai ser o m√©todo de pagamento chefe?: ").strip().lower()

# Convertendo n√∫mero para texto
metodos = ['pix', 'd√©bito', 'cr√©dito', 'dinheiro', 'fiado']
if pagamento_opcao.isdigit() and 1 <= int(pagamento_opcao) <= 5:
    pagamento = metodos[int(pagamento_opcao) - 1]
elif pagamento_opcao in metodos:
    pagamento = pagamento_opcao
else:
    print("M√©todo inv√°lido.")
    exit()

# Verifica√ß√£o de cart√£o e bandeira
if pagamento in ['cr√©dito', 'd√©bito']:
    bandeira = input("Qual a bandeira do cart√£o?: ").lower()
    bandeiras_aceitas = ['visa', 'mastercard', 'elo']
    if bandeira not in bandeiras_aceitas:
        print("Desculpe, n√£o aceitamos essa bandeira.")
        exit()
    else:
        print("Cart√£o aceito! :)")

# Se for cart√£o, aplicar acr√©scimo
if pagamento in ['cr√©dito', 'd√©bito']:
    pao *= 1.05  # 5% de acr√©scimo

# Se for cr√©dito, perguntar parcelas
if pagamento == 'cr√©dito':
    parcelas = int(input("Quantas parcelas deseja? "))
    print(f"Compra em {parcelas}x de R${(quantidade * pao)/parcelas:.2f}.")

# Valor total da compra
total = quantidade * pao

# Se for fiado, adicionar √† lista de devedores
if pagamento == 'fiado':
    nome = input("Qual seu nome pro caderninho dos devedores?: ")
    debtors.append(nome)
    print(f"\n{nome}, sua d√≠vida de R${total:.2f} foi registrada.")
    print("Volte sempre, caloteiro! üòÅ")
    exit()

# Receber dinheiro se for necess√°rio
if pagamento == 'dinheiro':
    dinheiro = float(input("\nDiga quanto voc√™ tem em R$: "))
    if dinheiro < total:
        print(f"Voc√™ n√£o tem dinheiro suficiente. O total √© R${total:.2f}")
        exit()
    troco = dinheiro - total
else:
    troco = 0.0

# Finalizando venda
stock[tipo_pao] -= quantidade
print(f"\nO p√£o {tipo_pao} custa R${pao:.2f} cada.")
print(f"Total: R${total:.2f}")

if troco > 0:
    print(f"Seu troco √© R${troco:.2f}")
elif troco == 0:
    print("Pagamento exato, sem troco. Valeu!")
else:
    print("Erro de c√°lculo!")

print("\nCompra finalizada! Obrigado pela prefer√™ncia!")

# Mostrar lista de devedores se houver
if len(debtors) > 0:
    print("\nLista de devedores atual:")
    for nome in debtors:
        print(f"- {nome}")
